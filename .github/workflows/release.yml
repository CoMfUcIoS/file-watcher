---
name: Build and Release
on:
  push:
    tags: ['*']
  workflow_dispatch:
jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: macos-latest
            filename: file-watcher-macos-amd64
          - os: ubuntu-latest
            filename: file-watcher-ubuntu-amd64
          - os: windows-latest
            filename: file-watcher-windows-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build binary
        run: |
          GOOS=$(echo ${{ matrix.os }} | cut -d'-' -f1)
          GOARCH=amd64
          go build -o ${{ matrix.filename }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.filename }}
          path: ${{ matrix.filename }}
  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: file-watcher-ubuntu-amd64.zip
          path: ./binaries/file-watcher-ubuntu-amd64.zip
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: file-watcher-macos-amd64
          path: ./binaries/file-watcher-macos-amd64.zip
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: file-watcher-windows-amd64
          path: ./binaries/file-watcher-windows-amd64.zip
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/file-watcher-ubuntu-amd64.zip
          asset_name: file-watcher-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/file-watcher-macos-amd64.zip
          asset_name: file-watcher-macos-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/file-watcher-windows-amd64.zip
          asset_name: file-watcher-windows-amd64.exe
          asset_content_type: application/octet-stream
